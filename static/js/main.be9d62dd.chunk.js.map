{"version":3,"sources":["index.js"],"names":["Table","props","state","Countries","ShowingCountries","SortingClass","CurrentPage","SortTableClick","bind","SwitchPage","id","type","onClick","this","btnSearchClick","className","aria-hidden","RenderTableData","CloseModalClick","document","getElementById","addEventListener","component","modal","e","target","window","key","name","value","toUpperCase","request","require","condition","error","response","body","console","log","statusCode","json","JSON","parse","filterJson","j","includes","push","sort","a","b","nameA","nameB","reverse","setState","Pagination","innerHTML","Content","skipCol","objCol","title","indexOf","subcol","replace","forEach","style","display","Data","CountriesCount","length","PageCount","Math","ceil","MaxData","i","pageHtml","MinPage","MaxPage","preventDefault","page","getAttribute","currentPage","scroll","colSpan","map","country","flag","alpha2Code","alpha3Code","nativeName","altSpellings","callingCodes","altSpelling","src","alt","OpenModalClick","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.be9d62dd.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n    this.state = {\n      Countries: [],\n      ShowingCountries: [],\n      SortingClass: \"fa fa-sort-alpha-asc\",\n      CurrentPage: 1\n    }\n\n    //let 'this' in func can be found\n    this.SortTableClick = this.SortTableClick.bind(this);\n    this.SwitchPage = this.SwitchPage.bind(this);\n  }\n  render() {\n    return (\n      <div id=\"container\">\n        <div>\n          <h1 id='title'>Country List</h1>\n          <label>Name:</label>\n          <input type=\"text\" id=\"txtName\"></input>\n          <button id=\"btnSearch\" onClick={this.btnSearchClick.bind(this)}>查詢</button>\n          <table id='country' className='CountryList'>\n            <tbody>\n              <tr>\n                <th>國旗</th>\n                <th className=\"SortCol\" onClick={this.SortTableClick}>國家名稱 <i className={this.state.SortingClass} aria-hidden=\"true\"></i></th>\n                <th>2位國家代碼</th>\n                <th>3位國家代碼</th>\n                <th>母語名稱</th>\n                <th>替代國家名稱</th>\n                <th>國際電話區號</th>\n              </tr>\n              {this.RenderTableData()}\n            </tbody>\n          </table>\n          {/* <nav aria-label=\"Page navigation example\"> */}\n          <ul className=\"Pagination\" id=\"ulPagination\"></ul>\n          {/* </nav> */}\n        </div>\n        <div id=\"myModal\" className=\"modal\" >\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={this.CloseModalClick.bind(this)}>&times;</span>\n            <div id=\"divModalContent\"></div>\n          </div>\n\n        </div>\n      </div >\n    )\n  }\n  componentDidMount() {\n    this.btnSearchClick();\n    const pag = document.getElementById(\"ulPagination\");\n    pag.addEventListener('click', this.SwitchPage);\n    const component = this;\n\n    //點空白處可關閉modal\n    let modal = document.getElementById('myModal')\n    modal.addEventListener('click', function (e) {\n      if (e.target === modal) {\n        component.CloseModalClick();\n      }\n    })\n    //enter 查詢\n    window.addEventListener('keyup', function (e) {\n      if (e.key === \"Enter\") {\n        component.btnSearchClick();\n      }\n    });\n  }\n  btnSearchClick() {\n    var name = document.getElementById(\"txtName\").value.toUpperCase();\n    var component = this;\n    const request = require('request');\n    var condition = 'all';//default\n    //用name查詢國家\n    if (name !== '')\n      condition = 'name/' + name;\n\n    var url = 'https://restcountries.eu/rest/v2/' + condition + '?fields=flag;name;alpha2Code;alpha3Code;nativeName;altSpellings;callingCodes';\n    request(url, function (error, response, body) {\n      console.error('error:', error); // Print the error if one occurred\n      console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n\n      if (response.statusCode === 200) {\n        let json = JSON.parse(body);\n        let filterJson = [];\n\n        for (var j in json) {\n          // console.log(json[j].name + ':' + name + '---' + json[j].name.includes(name))\n          if (json[j].name.toUpperCase().includes(name)) {\n            filterJson.push(json[j]);\n          }\n        }\n\n        filterJson.sort(function (a, b) {\n          var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n          var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n\n          // names must be equal\n          return 0;\n        });\n        if (component.state.SortingClass == \"fa fa-sort-alpha-desc\") {\n          filterJson = filterJson.reverse();\n        }\n        component.setState({\n          Countries: filterJson,\n          CurrentPage: 1,\n          //ShowingCountries: json\n        });\n        component.Pagination();\n      } else {\n        component.setState({\n          Countries: null,\n          ShowingCountries: null\n        });\n        document.getElementById(\"ulPagination\").innerHTML = '';\n      }\n    });\n  }\n  //打開modal\n  OpenModalClick(name) {\n    const request = require('request');\n    var url = 'https://restcountries.eu/rest/v2/name/' + name;\n\n    request(url, function (error, response, body) {\n      console.error('error:', error); // Print the error if one occurred\n      console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n\n      var Content = '';\n      if (response.statusCode === 200) {\n        Content += '<table class=\"tableDetail\">';\n        var json = JSON.parse(body)[0];\n        var skipCol = [\"flag\", \"alpha2Code\", \"alpha3Code\", \"nativeName\", \"altSpellings\", \"callingCodes\"];\n        var objCol = [\"currencies\", \"languages\", \"regionalBlocs\", \"translations\"];\n\n        for (var title in json) {\n          if (skipCol.indexOf(title) >= 0) {\n            continue;\n          } else if (objCol.indexOf(title) >= 0) {\n            Content += '<tr>';\n            Content += '<td><label style=\"font-weight:bold; align:top;\">' + title + '</label></td>';\n            if (title === \"translations\") {\n              Content += '<td>';\n              for (var subcol in json[title]) {\n                Content += '<label\">' + subcol + ':' + json[title][subcol] + ', </label>';\n              }\n              Content = Content.replace(/, <\\/label>\\s*$/, \"<\\/label>\");\n              Content += '</td>';\n            } else {\n              Content += '<td>';\n              json[title].forEach(e => {\n                for (var subcol in e) {\n                  Content += '<label\">' + subcol + ':' + e[subcol] + ', </label>';\n                  // Content += subcol + ':' + e[subcol];\n                  //   Content += ',';\n                }\n                Content = Content.replace(/, <\\/label>\\s*$/, \"<\\/label>\");\n              });\n              Content += '</td>';\n            }\n\n            // Content += '</label>'\n            Content += '</tr>';\n          } else {\n            Content += '<tr>';\n            Content += '<td><label style=\"font-weight:bold;align:top;\">' + title + '</label></td>';\n            Content += '<td><label>' + json[title] + '</label></td>'\n            Content += '</tr>';\n          }\n        }\n\n        Content += '</table>';\n      } else {\n        Content += '<p>查無資料</p>'\n      }\n      document.getElementById(\"divModalContent\").innerHTML = Content;\n      document.getElementById(\"myModal\").style.display = \"block\";\n    });\n  }\n  //關閉modal\n  CloseModalClick() {\n    document.getElementById(\"myModal\").style.display = \"none\";\n  }\n  //以名稱排序\n  SortTableClick() {\n    if (this.state.SortingClass == \"fa fa-sort-alpha-asc\") {\n      this.setState({ SortingClass: \"fa fa-sort-alpha-desc\" });\n    }\n    else {\n      this.setState({ SortingClass: \"fa fa-sort-alpha-asc\" });\n    }\n    if (this.state.Countries != null) {\n      this.setState({\n        \"Countries\": this.state.Countries.reverse()\n      });\n    }\n\n    this.Pagination();\n  }\n  //產生頁數\n  Pagination() {\n    let Data = [];\n    const Countries = this.state.Countries\n    const CountriesCount = Countries == null ? 0 : Countries.length;//資料總數\n    const PerPage = 25;//每頁筆數\n    const PageCount = Math.ceil(CountriesCount / PerPage);//頁面總數\n    const CurrentPage = this.state.CurrentPage;\n\n    // if (CurrentPage > PageCount) {\n    //   CurrentPage = PageCount;\n    // }\n    const MinData = (CurrentPage - 1) * PerPage;\n    let MaxData = (CurrentPage * PerPage);\n    if (MaxData > CountriesCount) {\n      MaxData = CountriesCount;\n    }\n\n    for (let i = MinData; i < MaxData; i++) {\n      Data.push(Countries[i]);\n    }\n\n    this.setState({\n      ShowingCountries: Data\n    });\n\n    let pageHtml = '';\n    if (Data.length != 0) {\n      if (CurrentPage != 1) {\n        pageHtml += '<li><a href=\"#\" page=prev><</a></li>';\n      }\n\n      let MinPage = 1;\n      if (CurrentPage > 6) {\n        MinPage = CurrentPage - 5;\n      }\n\n      let MaxPage = MinPage + 9;\n      if (MaxPage > PageCount) {\n        MaxPage = PageCount;\n      }\n\n      for (let i = MinPage; i < MaxPage + 1; i++) {\n        if (CurrentPage == i) {\n          pageHtml += '<li><a class=\"active\" href=\"#\" page=' + i + '>' + (i) + '</a></li>';\n        } else {\n          pageHtml += '<li><a href=\"#\" page=' + i + '>' + (i) + '</a></li>';\n        }\n      };\n\n      //有下一頁\n      if (CurrentPage != PageCount) {\n        pageHtml += '<li><a href=\"#\" page=next>></a></li>';\n        // pageHtml += '<li class=\"page-item disabled\"><span class=\"page-link\">Next</span></li>';\n      }\n    }\n\n    document.getElementById(\"ulPagination\").innerHTML = pageHtml;\n  }\n  SwitchPage(e) {\n    e.preventDefault();\n    const page = e.target.getAttribute(\"page\");\n    let currentPage = this.state.CurrentPage;\n    if (page === 'prev') {\n      currentPage--;\n    } else if (page === 'next') {\n      currentPage++;\n    } else {\n      currentPage = page;\n    }\n\n    this.setState({ CurrentPage: currentPage })\n    this.Pagination();\n    window.scroll(0, 0);\n  }\n  RenderTableData() {\n    if (this.state.ShowingCountries == null || this.state.ShowingCountries.length == 0) {\n      return (\n        <tr>\n          <td colSpan=\"7\">查無資料</td>\n        </tr>\n      )\n    } else {\n      return this.state.ShowingCountries.map((country) => {\n        const { flag, name, alpha2Code, alpha3Code, nativeName, altSpellings, callingCodes } = country //destructuring\n        let altSpelling = '';\n        altSpellings.forEach(e => {\n          altSpelling += (e + ', ');\n        });\n        altSpelling = altSpelling.replace(/, \\s*$/, \"\");\n        return (\n          <tr key={name}>\n            <td><img src={flag} alt={name} className=\"tdimage\" /></td>\n            <td className=\"tdOpenModal\" onClick={() => this.OpenModalClick(name)}>{name}</td>\n            <td>{alpha2Code}</td>\n            <td>{alpha3Code}</td>\n            <td>{nativeName}</td>\n            <td>{altSpelling}</td>\n            <td>{callingCodes}</td>\n          </tr>\n        )\n      })\n    }\n  }\n\n}\n\n// ========================================\n\nReactDOM.render(\n  <Table />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}